<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须与接口的全类名一致 -->
<mapper namespace="com.yy.mapper.UserMapper">

	<resultMap type="User" id="UserMap">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<collection column="id" property="roles" javaType="list"
			select="selectAllRoles"></collection>
	</resultMap>

	<select id="selectAllRoles" parameterType="INTEGER" resultType="Role">
		select id,role,remark
		from role where id in (select user_role.roleid
		from user_role where
		user_role.userid=#{id})
	</select>

	<!-- id必须和mapper接口对应的功能名称一致 ，此处只写save功能 -->
	<insert id="save" parameterType="User">
		insert into user(nickname,
		username, password,salt,mobile,email)
		values(#{nickname},#{username},#{password},#{salt},#{mobile},#{email})
	</insert>
	<select id="findById" parameterType="Integer" resultMap="UserMap">
		select
		*
		from user where id = #{id}
	</select>
	<select id="findByUserName" parameterType="String" resultMap="UserMap">
		select * from user where username = #{username}
	</select>
	<delete id="delete" parameterType="User">
		delete from user where user.id
		=
		#{id}
	</delete>
	<update id="update" parameterType="User">
		update user set
		username=#{username}
		<if test='nickname != null'>
			,nickname=#{nickname}
		</if>
		<if test='password != null'>
			,password= #{password}
		</if>
		<if test='salt != null'>
			,salt= #{salt}
		</if>
		<if test='mobile != null'>
			,mobile= #{mobile}
		</if>
		<if test='email != null'>
			,email= #{email}
		</if>
		where id = #{id}
	</update>


	<select id="getUserListByLimit" resultMap="UserMap">
		select
		user.id,user.userName,user.nickname,user.mobile,user.email
		from
		user
		where id != 1
		<if test='username != null'>
			and userName like '%${username}%'
		</if>
	</select>

	<delete id="deleteUserList" parameterType="java.util.List">
		delete from user
		where user.id in
		<foreach item="param" collection="list" open="(" close=")"
			separator=",">
			#{param.id}
		</foreach>
	</delete>
	<delete id="deleteUserRoles" parameterType="java.util.List">
		delete from user_role
		where user_role.userid in
		<foreach item="param" collection="list" open="(" close=")"
			separator=",">
			#{param}
		</foreach>
	</delete>

	<insert id="saveUserRole">
		insert into user_role(userid,
		roleid)
		values
		<foreach item="role" collection="roles" separator=",">
			(#{user.id},#{role.id})
		</foreach>
	</insert>


</mapper>  